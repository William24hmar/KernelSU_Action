# Config file tuned for Lunaris AOSP Android 16 and the updated GitHub Actions workflow
# Drop this file at the repo root as "config.env"
# NOTES:
# - The workflow will repo-init the Lunaris manifest and sync prebuilts/clang/host/linux-x86 (CLANG_BRANCH)
# - Make sure KERNEL_SOURCE points at your kernel repo and KERNEL_CONFIG matches a defconfig inside that repo
# - If ENABLE_KERNELSU=true the workflow will run the KernelSU setup script with KERNELSU_TAG
# - Adjust SOURCE_BOOT_IMAGE to a stock boot.img (or boot.img.gz) from your device for correct mkbootimg layout.

CONFIG_ENV=config.env

# Kernel repository to build (leave as your kernel)
KERNEL_SOURCE=https://github.com/William24hmar/kernel_nothing_sm7325.git
KERNEL_SOURCE_BRANCH=lineage-22.2

# Kernel build config
# Ensure this defconfig path exists in your kernel repo (e.g. arch/arm64/configs/vendor/lahaina-qgki_defconfig)
KERNEL_CONFIG=vendor/lahaina-qgki_defconfig
KERNEL_IMAGE_NAME=Image
ARCH=arm64
ADD_LOCALVERSION_TO_FILENAME=false
EXTRA_CMDS:LD=ld.lld

# Clang selection
# We sync prebuilts/clang from android.googlesource; set CLANG_BRANCH to the clang folder name you want (example: clang-r547379)
USE_CUSTOM_CLANG=false
CUSTOM_CLANG_SOURCE=
CUSTOM_CLANG_BRANCH=
CLANG_BRANCH=clang-r547379
CLANG_VERSION=clang-r547379

# GCC (usually not required if building with clang/LLVM)
ENABLE_GCC_ARM64=false
ENABLE_GCC_ARM32=false
USE_CUSTOM_GCC_64=false
CUSTOM_GCC_64_SOURCE=
CUSTOM_GCC_64_BRANCH=
CUSTOM_GCC_64_BIN=
USE_CUSTOM_GCC_32=false
CUSTOM_GCC_32_SOURCE=
CUSTOM_GCC_32_BRANCH=
CUSTOM_GCC_32_BIN=

# KernelSU (enable if you want KernelSU v0.9.5 applied)
ENABLE_KERNELSU=true
KERNELSU_TAG=v0.9.5
APPLY_KSU_PATCH=true

# Optional kernel tweaks
ADD_KPROBES_CONFIG=true
ADD_OVERLAYFS_CONFIG=false
DISABLE_LTO=false
DISABLE_CC_WERROR=true

# AnyKernel3 (packaging) - kept disabled by default
USE_CUSTOM_ANYKERNEL3=false
CUSTOM_ANYKERNEL3_SOURCE=
CUSTOM_ANYKERNEL3_BRANCH=

# Ccache
ENABLE_CCACHE=true

# DTBO image (set to true if your device requires dtbo.img appended)
NEED_DTBO=false

# Build boot images
BUILD_BOOT_IMG=true
# Provide a stock boot.img (or boot.img.gz) from your device that the workflow will unpack and reuse structure from
SOURCE_BOOT_IMAGE=https://raw.githubusercontent.com/William24hmar/KernelSU_Action/main/boot/boot.img.gz

# KernelSU integrity checks (optional)
KSU_EXPECTED_SIZE=
KSU_EXPECTED_HASH=

# Misc
REMOVE_UNUSED_PACKAGES=false
